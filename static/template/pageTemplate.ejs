<template>
  <div>
    <content-box>
    <%_ if(config.title) {-%>
      <div class="tabList">
        <ul>
          <li><%- config.title %></li>
        </ul>
      </div>
    <%_ }-%>
      <div class="search-box">
        <el-form
          :inline="true"
          :model="search"
          ref="search"
          class="search_area"
          label-position="left"
        >
      <%_ for(let i = 0; i < config.form.length; i++) { -%>
        <%_ let formItem = config.form[i] -%>
          <el-form-item prop="<%= formItem[0] %>" label="<%= formItem[1].label %>">
          <%_ if(formItem[1].type === 'map') { -%>
            <el-select v-model="<%= 'search.' + formItem[0] %>" placeholder="<%= '请选择' + formItem[1].label %>">
              <el-option
                v-for="<%- '(label, value) in ' + formItem[1].map %>"
                :label="label"
                :value="value"
                :key="value"></el-option>
            </el-select>
          <%_ } else if(formItem[1].type === 'date'){ -%>
            <el-date-picker
              v-model="<%= 'search.' + formItem[0] %>"
              value-format="timestamp"
              type="date"
              placeholder="<%= '请选择' + formItem[1].label %>">
            </el-date-picker>
          <%_ } else {-%>
            <el-input v-model="<%= 'search.' + formItem[0] %>" placeholder="<%= '请输入' + formItem[1].label %>"></el-input>
          <%_ } -%>
          </el-form-item>
      <%_ } -%>
          <el-form-item>
            <el-button size="small" type="primary" class="ml20" @click="handleSearch">搜索</el-button>
            <el-button size="small" type="info" plain class="ml20" @click="resetForm">重置</el-button>
          </el-form-item>
        </el-form>
      </div>
    </content-box>
    <content-box v-loading="loading">
      <div v-if="list && list.length>0">
        <el-table ref="singleTable" :data="list" class="listContainer" highlight-current-row>
        <%_ config.table.forEach(tableItem => { -%>
          <%_ let tableValue = tableItem[1] -%>
          <el-table-column label="<%= tableValue.label %>" prop="<%= tableItem[0] %>" show-overflow-tooltip width="<%= tableValue.width ? tableValue.width : 'auto' %>">
          <%_ if(tableValue.type !== 'normal') {-%>
            <template slot-scope="{row}">
            <%_ if(tableValue.type === 'map') {-%>
              <div><%= '{{' + tableValue.map + '[row.' + tableItem[0] + ']}}' %></div>
            <%_ } else if(tableValue.type === 'date') {-%>
              <div><%= '{{ row.' + tableItem[0] + ' | formatDate}}' %></div>
            <%_ }-%>
            </template>
          <%_ }-%>
          </el-table-column>
        <%_ }) -%>
        </el-table>
      </div>
      <placeholder v-else text="未查询到信息，请检查查询条件是否正确"/>
      <pagination
        ref="pagination"
        :page-size="query.pageSize"
        :total="query.total"
        :current-page.sync="query.pageIndex"
        :query.sync="query"
        @fetch="getList"
      />
    </content-box>
  </div>
</template>

<script>
import { getButtonAuth } from 'service/common'
import dayjs from 'dayjs'
<%_ if(config.Url) {-%>
import * as httpAgent from 'utils/http'

<%- 'let LIST_URL = "' + config.Url + '"' %>

<%_ } %>
export default {
  data() {
    return {
      search: {
      <%_ config.form.forEach(formItem => { -%>
        <%- formItem[0] + ': "",'%>
      <%_ }) -%>
      },
      query: {
        pageSize: 10,
        pageIndex: 1
      },
      list: [],
      loading: false,
      dayjs: dayjs,
      <%_ Object.keys(config.data).forEach(key => { -%>
      <%= key %>: <%- JSON.stringify(config.data[key]) %>,
      <%_ })-%>
    }
  },
  mounted: function() {
    this.handleSearch()
  },
  methods: {
    resetForm() {
      this.$refs.search.resetFields();
    },
    handleSearch() {
      this.query = Object.assign({}, this.query, this.search)
      this.getList(this.query)
    },
    
    getList(query) {
      this.query = query || this.query
      this.loading = true
      delete this.query.total

      this.httpGetList(this.query).subscribe(
        res => {
          <%= 'this.list = res.data.' + config.dataList || 'list' %>
          this.query.total = res.data.totalCount
          this.loading = false
          
        },
        error => {
          this.loading = false
        }
      )
    },
    httpGetList(params) {
      return httpAgent.GET(LIST_URL, params)
    }
  }
}
</script>
